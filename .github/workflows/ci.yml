name: Beargrease Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 💾 Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 💾 Cache Cargo build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: 🔧 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq pkg-config libssl-dev build-essential

      - name: 🐳 Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: 🧭 Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/v1.17.21/install)"
          echo "export PATH=\"$HOME/.local/share/solana/install/active_release/bin:$PATH\"" >> $GITHUB_ENV

      - name: 🦀 Install Rust (Latest stable for Anchor compatibility)
        run: |
          rustup update
          rustup default stable

      - name: 🛠 Install Anchor CLI (nv0.29.0 without --locked)
        run: |
          cargo install --git https://github.com/coral-xyz/anchor anchor-cli --tag v0.29.0

      - name: 🧶 Install JavaScript dependencies
        run: |
          echo "🧶 Installing JavaScript deps..."
          if ! yarn install; then
            echo "⚠️ Yarn install failed. Continuing anyway (some tests may fail)." >&2
          fi

      - name: 🔐 Restore test wallet
        run: |
          mkdir -p .ledger/wallets
          echo "$TEST_USER_KEYPAIR" > .ledger/wallets/test-user.json
        env:
          TEST_USER_KEYPAIR: ${{ secrets.TEST_USER_KEYPAIR }}

      - name: 🧪 Run Beargrease Tests
        run: ./scripts/run-tests.sh
